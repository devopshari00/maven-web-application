node{

echo "The Job name is : ${env.JOB_NAME}"
echo "The Build number is : ${env.BUILD_NUMBER}" 
echo "The Node name is : ${env.NODE_NAME}"
echo "The Jenkins HD is : ${env.JENKINS_HOME}"
    
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
def mavenHome = tool name :'maven 3.9.3'
try{   
stage('CheckoutCode'){
git branch: 'development', credentialsId: 'devopshari00', url: 'https://github.com/devopshari00/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*

stage('ExecuteSonarqubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage('UploadArtifactsIntoNexus'){
sh "${mavenHome}/bin/mvn clean deploy"
}

stage('DeployAppIntoTomcatserver'){
sshagent(['6ed7e4c1-4161-4bad-8516-0327124f36e1']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.179:/opt/apache-tomcat-9.0.78/webapps/" 
}
}
*/
}
catch (e) {
currentBuild.result = "FAILURE"
} 
	
finally {
sendslacknotifications(currentBuild.result)
}

}// node closing


def sendslacknotifications(String buildStatus = 'STARTED') {
    // Build status of null means success.
    buildStatus = buildStatus ?: 'SUCCESS'
	
	//Default values
	def colorName = 'RED'
	def colorCode = '#FF0000'
	def subject = "${buildStatus}: Job '{env.Job_name} [${env.BUILD_NUMBER}]'"
	def summary = "${subject} (${env.BUILD_URL})"

    //Override values based on build status

    if (buildStatus == 'STARTED') {
	    color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        color = 'GREEN'
		colorCode = '#008000'
    } else {
	    color = 'RED'
        colorCode = '#FF0000'
    }

    //send notifications
	slackSend (color: colorCode, message: summary, channel: '#citibank-team')
}
